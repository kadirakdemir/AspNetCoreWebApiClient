// <auto-generated />
using AspNetCoreWebApi.Api.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNetCoreWebApi.Api.Infrastructure.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreWebApi.Api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Çorbalar",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Kebaplar",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Salatalar",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "İçecekler",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Balıklar",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Sulu Yemekler",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Meyveler",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Tatlılar",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Kuru Yemiş",
                            Description = "Anadolunun mutfağından tap taze organik ürünlerden elde ettiğimiz kendi ürünlerimiz ile profesyonel ekibimizle hazırlanmış günlük yemekler. ",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("AspNetCoreWebApi.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<int>("Stock");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Mercimek",
                            Price = 5.0,
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            IsActive = true,
                            Name = "Ezogelin",
                            Price = 5.0,
                            Stock = 95
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            IsActive = true,
                            Name = "İskender",
                            Price = 25.0,
                            Stock = 70
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            IsActive = true,
                            Name = "Adana",
                            Price = 25.0,
                            Stock = 80
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            IsActive = true,
                            Name = "Mevsim",
                            Price = 8.0,
                            Stock = 100
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            IsActive = true,
                            Name = "Havuç",
                            Price = 6.0,
                            Stock = 40
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            IsActive = true,
                            Name = "Kola",
                            Price = 4.0,
                            Stock = 150
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            IsActive = true,
                            Name = "Ayran",
                            Price = 3.0,
                            Stock = 200
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            IsActive = true,
                            Name = "Kuru Fasülye",
                            Price = 12.0,
                            Stock = 90
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            IsActive = true,
                            Name = "Bezelye",
                            Price = 10.0,
                            Stock = 70
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            IsActive = true,
                            Name = "Uskumru",
                            Price = 25.0,
                            Stock = 25
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 6,
                            IsActive = true,
                            Name = "Hamsi Tava",
                            Price = 25.0,
                            Stock = 40
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 7,
                            IsActive = true,
                            Name = "Portakal",
                            Price = 1.0,
                            Stock = 300
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 7,
                            IsActive = true,
                            Name = "Elma",
                            Price = 1.0,
                            Stock = 275
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 8,
                            IsActive = true,
                            Name = "Baklava",
                            Price = 10.0,
                            Stock = 100
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 8,
                            IsActive = true,
                            Name = "Sütlaç",
                            Price = 8.0,
                            Stock = 100
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 9,
                            IsActive = true,
                            Name = "Fındık",
                            Price = 5.0,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 9,
                            IsActive = true,
                            Name = "Fıstık",
                            Price = 5.0,
                            Stock = 1000
                        });
                });

            modelBuilder.Entity("AspNetCoreWebApi.Api.Models.Product", b =>
                {
                    b.HasOne("AspNetCoreWebApi.Api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
